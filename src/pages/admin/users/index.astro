---
interface Column {
  align?: "left" | "right" | "center";
  header: string;
  cell: {
    class?: string;
    content: (item: any) => string | Promise<string>;
  };
}

interface Props {
  data: any[] | { error: string };
  columns: Column[];
  title?: string;
  buttonLinks?: {
    href: string;
    text: string;
  }[];
}

import ButtonLink from "@/components/ui/ButtonLink.astro";

const { data, columns, title, buttonLinks } = Astro.props;
---

<div class="flex gap-8 w-full items-center justify-between mb-8">
  <div class="">
    <h2 class="text-xl font-semibold">{title}</h2>
  </div>
  <div class="flex gap-4">
    {buttonLinks?.map((buttonLink) => (
      <ButtonLink href={buttonLink.href} text={buttonLink.text} />
    ))}
  </div>
</div>

{
  data && (
    <div>
      {'error' in data ? (
        <p class="text-red-500">Error loading data</p>
      ) : data.length === 0 ? (
        <p class="text-neutral-500">No items found</p>
      ) : (
        <div class="border-base-content/25 w-full overflow-x-auto border">
          <table class="table table-md">
            <thead>
              <tr class="bg-neutral-100">
                {columns.map((column) => (
                  <th class={`font-bold text-xs text-neutral-500 ${column.align === "right" ? "text-right" : column.align === "center" ? "text-center" : "text-left"}`}>
                    {column.header}
                  </th>
                ))}
              </tr>
            </thead>
            <tbody>
              {data.map((item) => (
                <tr class="row-hover">
                  {columns.map((column) => (
                    <td
                      class={`text-nowrap ${column.cell.class} ${column.align === "right" ? "text-right" : column.align === "center" ? "text-center" : "text-left"}`}
                      set:html={column.cell.content(item)}
                    />
                  ))}
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      )}
    </div>
  )
}
