---

interface Props {
  horse?: any;
  stallions?: any[];
  mares?: any[];
  pedigree?: any;
  redirect?: string;
}

const { horse, stallions = [], mares = [], pedigree, redirect = "" } = Astro.props;

import InputText from "@/components/forms/InputText.astro";
import ButtonSubmit from "@/components/forms/ButtonSubmit.astro";
import ButtonDelete from "@/components/forms/ButtonDelete.astro";
import Textarea from "@/components/forms/Textarea.astro";
import Select from "@/components/forms/Select.astro";
import PhotoUploadSingle from "@/components/forms/PhotoUploadSingle.astro";
import PhotoUploadGallery from "@/components/forms/PhotoUploadGallery.astro";

import { ensureCsrfToken } from "@/lib/csrf";
ensureCsrfToken(Astro.cookies);
---

<script>
  import { validateOnBlur } from '@/components/ui/scripts/validate-input.js';
  // @ts-ignore
  window.validateOnBlur = validateOnBlur;
</script>


<form data-form aria-label="Horse Form" novalidate>
  <input type="hidden" name="csrf" value={Astro.cookies.get('csrf')?.value} />



  <div class="grid grid-cols-2 gap-4 mb-4">
        <div class="flex flex-col">
          
          <div class="flex flex-col mb-4">
            <InputText
              label="Registered Name"
              name="name"
              value={horse?.name}
              required
              validation={{
                types: ["alphanumericWithSpaces"],
                unique: {
                  collection: "horses",
                  field: "name",
                  errorMessage: "This name is already registered",
                  exempt: horse ? {
                    "uuid": horse.uuid
                  } : undefined,
                },
              }}
              />
          </div>


          <div class="flex flex-col mb-4">
            <InputText label="Breed" name="breed" value={horse?.breed} />
          </div>

          <div class="flex flex-col mb-4">
            <InputText label="Color" name="color" value={horse?.color} />
          </div>
          <div class="flex flex-col mb-4">
            <InputText
              label="Foal Year"
              name="foal_year"
              value={horse?.foal_year}
            />
          </div>

          <div class="flex flex-col mb-4">
            <Select
              label="Sex"
              name="sex"
              options={[
                { label: "", value: "" },
                { label: "Stallion", value: "stallion" },
                { label: "Mare", value: "mare" },
                { label: "Gelding", value: "gelding" },
              ]}
              selected={horse?.sex}
              required
            />
          </div>

          <div class="flex flex-col mb-4">
            <InputText
              label="Website or Social Media Link"
              name="url_website"
              value={horse?.url_website}
            />
          </div>
          <div class="flex flex-col mb-4">
            <InputText
              label="Youtube / Vimeo Video Link"
              name="url_video"
              value={horse?.url_video}
            />
          </div>

          <div class="flex flex-col mb-4">
            <Textarea
              label="Description"
              name="description"
              value={horse?.description}
            />
          </div>
          <div class="flex flex-col mb-4">
            <Textarea
              label="Performance Record"
              name="performance_record"
              value={horse?.performance_record}
            />
          </div>





{ horse && (

          <div class="flex flex-col mb-4">
            <label class="label label-text">Primary Photo</label>
            <PhotoUploadSingle
              related_id={horse?.uuid}
              related_table="horses"
              related_column="photo_url"
              url={horse?.photo_url}
              url_parameters={horse?.photo_url_parameters}
              upload_path="/horses"

            />
          </div>

          <div class="flex flex-col mb-4">
            <label class="label label-text">Alternate Photo</label>
            <PhotoUploadSingle
              related_id={horse?.uuid}
              related_table="horses"            
              related_column="alt_photo_url"
              url={horse?.alt_photo_url}
              url_parameters={horse?.alt_photo_url_parameters}
              upload_path="/horses/alt"
              file_limit_size={1}
              file_formats="image/jpeg"
            />
          </div>



          <div class="flex flex-col mb-4">
            <label class="label label-text">Gallery Photos</label>
            <PhotoUploadGallery
              related_id={horse?.uuid}
              related_table="horses"
              gallery_type="horse-gallery"
              upload_path="/horses/gallery"
            />
          </div>


          <div class="flex flex-col mb-4">
            <label class="label label-text">Slideshow Photos</label>
            <PhotoUploadGallery
              related_id={horse?.uuid}
              related_table="horses"
              gallery_type="horse-slideshow"
              upload_path="/horses/slideshow"
              file_limit_quantity={6}
              file_limit_size={1}
              file_formats="image/jpeg"
            />
          </div>

)}


        </div>


  </div>

  {horse && <input name="uuid" value={horse.uuid} type="hidden" />}

  <div class="flex gap-4">
    <ButtonSubmit
      text={horse ? "Save Horse Profile" : "Create Horse Profile"}
      workingText="Saving..."
      form="[data-form]"
      endpoint="/api/horse/save"
      redirect={redirect}
    />







    {horse && 
      <ButtonDelete
        text="Delete"
        type="horse"
        uuid={horse.uuid}
        endpoint="/api/horse/delete"
        redirect={redirect}
      />
    }





  </div>
</form>
