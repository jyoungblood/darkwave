---
// DW - Form delete button

interface Props {
  text: string;
  type: string;
  class?: string;
  endpoint: string;
  redirect: string;
  uuid: string;
}

const {
  text: buttonText,
  type,
  class: className = "",
  endpoint,
  redirect,
  uuid,
} = Astro.props;
---

<!-- class="bg-black text-white p-3 text-sm font-semibold rounded-md
hover:bg-neutral-800 cursor-pointer disabled:opacity-50 disabled:cursor-not-allowed
flex items-center justify-center" -->
<div class="relative">
  <button
    type="button"
    data-delete-trigger
    class="btn btn-text btn-error flex items-center justify-center"
  >
    <span>{buttonText}</span>
  </button>
</div>

<script define:vars={{ endpoint, redirect, type, uuid }}>
  const deleteTrigger = document.querySelector("[data-delete-trigger]");

  if (!deleteTrigger) return;

  deleteTrigger.addEventListener("click", () => {
    window.showAlert({
      type: "warning",
      variant: "soft",
      title: `Are you sure you want to delete this ${type}?`,
      text: "",
      icon: true,
      buttons: [
        {
          text: "No",
          variant: "outline",
          size: "sm",
          type: "warning",
        },
        {
          type: "warning",
          text: "Yes",
          variant: "solid",
          size: "sm",
          onClick: async () => {
            try {
              const response = await fetch(endpoint, {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({ uuid }),
              });

              if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
              }

              // Show success message
              window.showAlert({
                type: "success",
                variant: "soft",
                title: "Success",
                text: `${type} deleted successfully`,
                icon: true,
                duration: 3000,
              });

              // Redirect after a short delay to allow the success message to be seen
              setTimeout(() => {
                window.location.href = redirect;
              }, 1000);
            } catch (error) {
              console.error("Error:", error);
              window.showAlert({
                type: "error",
                variant: "soft",
                title: "Error",
                text:
                  error instanceof Error ? error.message : "Failed to delete",
                icon: true,
                buttons: [
                  {
                    type: "error",
                    text: "OK",
                    variant: "solid",
                  },
                ],
              });
            }
          },
        },
      ],
    });
  });
</script>
